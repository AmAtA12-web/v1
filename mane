local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

-- Цветовая схема
local COLORS = {
    background = Color3.fromRGB(40, 40, 40),
    header = Color3.fromRGB(76, 118, 186),
    accent = Color3.fromRGB(76, 118, 186),
    text = Color3.fromRGB(255, 255, 255),
    disabled = Color3.fromRGB(100, 100, 100),
    tab_selected = Color3.fromRGB(60, 60, 60),
    tab_unselected = Color3.fromRGB(30, 30, 30)
}

local player = Players.LocalPlayer
local bubbleRemote = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote")
local pickupRemote = nil

-- Настройки окна
local config = {
    width = 400,
    height = 500,
    cornerRadius = 12
}

-- Проверка ремоута для автофарма
local function checkPickupRemote()
    local success, remote = pcall(function()
        return ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Pickups"):WaitForChild("CollectPickup", 5)
    end)
    if success and remote then
        pickupRemote = remote
        print("Pickup remote found")
        return true
    else
        warn("Pickup remote not found!")
        return false
    end
end

-- Создаем GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LuckyCC"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = player:WaitForChild("PlayerGui")

-- Основное окно
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, config.width, 0, config.height)
MainFrame.Position = UDim2.new(0.8, 0, 0.3, 0)
MainFrame.BackgroundColor3 = COLORS.background
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, config.cornerRadius)
UICorner.Parent = MainFrame

-- Заголовок
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = COLORS.header
TitleBar.ZIndex = 2
TitleBar.Parent = MainFrame

local TitleBarCorner = Instance.new("UICorner")
TitleBarCorner.CornerRadius = UDim.new(0, config.cornerRadius)
TitleBarCorner.Parent = TitleBar

local Title = Instance.new("TextLabel")
Title.Text = "lucky.cc"
Title.Size = UDim2.new(1, -60, 1, 0)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = COLORS.text
Title.Font = Enum.Font.GothamBold
Title.TextSize = 14
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.ZIndex = 2
Title.Parent = TitleBar

-- Кнопки управления
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Text = "_"
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -61, 0.5, -12)
MinimizeButton.BackgroundColor3 = COLORS.accent
MinimizeButton.TextColor3 = COLORS.text
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 16
MinimizeButton.ZIndex = 3
MinimizeButton.Parent = TitleBar

local MinimizeButtonCorner = Instance.new("UICorner")
MinimizeButtonCorner.CornerRadius = UDim.new(0, 6)
MinimizeButtonCorner.Parent = MinimizeButton

local CloseButton = Instance.new("TextButton")
CloseButton.Text = "×"
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -31, 0.5, -12)
CloseButton.BackgroundColor3 = COLORS.accent
CloseButton.TextColor3 = COLORS.text
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 18
CloseButton.ZIndex = 3
CloseButton.Parent = TitleBar

local CloseButtonCorner = Instance.new("UICorner")
CloseButtonCorner.CornerRadius = UDim.new(0, 6)
CloseButtonCorner.Parent = CloseButton

-- Боковая панель
local TabPanel = Instance.new("Frame")
TabPanel.Size = UDim2.new(0, 50, 1, -30)
TabPanel.Position = UDim2.new(0, 0, 0, 30)
TabPanel.BackgroundColor3 = COLORS.tab_unselected
TabPanel.ZIndex = 2
TabPanel.Parent = MainFrame

local TabPanelCorner = Instance.new("UICorner")
TabPanelCorner.CornerRadius = UDim.new(0, config.cornerRadius)
TabPanelCorner.Parent = TabPanel

-- Контейнер вкладок
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -50, 1, -30)
ContentFrame.Position = UDim2.new(0, 50, 0, 30)
ContentFrame.BackgroundTransparency = 1
ContentFrame.ZIndex = 1
ContentFrame.Parent = MainFrame

-- Вкладки
local HomeTab = Instance.new("Frame")
HomeTab.Size = UDim2.new(1, 0, 1, 0)
HomeTab.BackgroundTransparency = 1
HomeTab.Visible = true
HomeTab.Parent = ContentFrame

local FarmTab = Instance.new("Frame")
FarmTab.Size = UDim2.new(1, 0, 1, 0)
FarmTab.BackgroundTransparency = 1
FarmTab.Visible = false
FarmTab.Parent = ContentFrame

local MiscTab = Instance.new("Frame")
MiscTab.Size = UDim2.new(1, 0, 1, 0)
MiscTab.BackgroundTransparency = 1
MiscTab.Visible = false
MiscTab.Parent = ContentFrame

local EnchantTab = Instance.new("Frame")
EnchantTab.Size = UDim2.new(1, 0, 1, 0)
EnchantTab.BackgroundTransparency = 1
EnchantTab.Visible = false
EnchantTab.Parent = ContentFrame

-- Кнопки вкладок
local HomeTabButton = Instance.new("TextButton")
HomeTabButton.Size = UDim2.new(1, 0, 0, 25)
HomeTabButton.Position = UDim2.new(0, 0, 0, 30)
HomeTabButton.BackgroundColor3 = COLORS.tab_selected
HomeTabButton.Text = "Home"
HomeTabButton.TextColor3 = COLORS.text
HomeTabButton.Font = Enum.Font.GothamBold
HomeTabButton.TextSize = 12
HomeTabButton.ZIndex = 3
HomeTabButton.Parent = TabPanel

local FarmTabButton = Instance.new("TextButton")
FarmTabButton.Size = UDim2.new(1, 0, 0, 25)
FarmTabButton.Position = UDim2.new(0, 0, 0, 55)
FarmTabButton.BackgroundColor3 = COLORS.tab_unselected
FarmTabButton.Text = "Farm"
FarmTabButton.TextColor3 = COLORS.text
FarmTabButton.Font = Enum.Font.GothamBold
FarmTabButton.TextSize = 12
FarmTabButton.ZIndex = 3
FarmTabButton.Parent = TabPanel

local MiscTabButton = Instance.new("TextButton")
MiscTabButton.Size = UDim2.new(1, 0, 0, 25)
MiscTabButton.Position = UDim2.new(0, 0, 0, 80)
MiscTabButton.BackgroundColor3 = COLORS.tab_unselected
MiscTabButton.Text = "Misc"
MiscTabButton.TextColor3 = COLORS.text
MiscTabButton.Font = Enum.Font.GothamBold
MiscTabButton.TextSize = 12
MiscTabButton.ZIndex = 3
MiscTabButton.Parent = TabPanel

local EnchantTabButton = Instance.new("TextButton")
EnchantTabButton.Size = UDim2.new(1, 0, 0, 25)
EnchantTabButton.Position = UDim2.new(0, 0, 0, 105)
EnchantTabButton.BackgroundColor3 = COLORS.tab_unselected
EnchantTabButton.Text = "Enchant"
EnchantTabButton.TextColor3 = COLORS.text
EnchantTabButton.Font = Enum.Font.GothamBold
EnchantTabButton.TextSize = 12
EnchantTabButton.ZIndex = 3
EnchantTabButton.Parent = TabPanel

-- Вкладка Home: WalkSpeed Slider
local WalkSpeedFrame = Instance.new("Frame")
WalkSpeedFrame.Size = UDim2.new(1, -20, 0, 50)
WalkSpeedFrame.Position = UDim2.new(0, 10, 0, 10)
WalkSpeedFrame.BackgroundTransparency = 1
WalkSpeedFrame.ZIndex = 1
WalkSpeedFrame.Parent = HomeTab

local WalkSpeedLabel = Instance.new("TextLabel")
WalkSpeedLabel.Text = "WalkSpeed: 16"
WalkSpeedLabel.Size = UDim2.new(1, 0, 0, 20)
WalkSpeedLabel.BackgroundTransparency = 1
WalkSpeedLabel.TextColor3 = COLORS.text
WalkSpeedLabel.Font = Enum.Font.Gotham
WalkSpeedLabel.TextSize = 14
WalkSpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
WalkSpeedLabel.ZIndex = 1
WalkSpeedLabel.Parent = WalkSpeedFrame

local WalkSpeedSliderTrack = Instance.new("TextButton")
WalkSpeedSliderTrack.Size = UDim2.new(1, 0, 0, 6)
WalkSpeedSliderTrack.Position = UDim2.new(0, 0, 0, 30)
WalkSpeedSliderTrack.BackgroundColor3 = COLORS.disabled
WalkSpeedSliderTrack.Text = ""
WalkSpeedSliderTrack.ZIndex = 1
WalkSpeedSliderTrack.Parent = WalkSpeedFrame

local WalkSpeedTrackCorner = Instance.new("UICorner")
WalkSpeedTrackCorner.CornerRadius = UDim.new(1, 0)
WalkSpeedTrackCorner.Parent = WalkSpeedSliderTrack

local WalkSpeedSliderFill = Instance.new("Frame")
WalkSpeedSliderFill.Size = UDim2.new(0.032, 0, 1, 0)
WalkSpeedSliderFill.BackgroundColor3 = COLORS.accent
WalkSpeedSliderFill.ZIndex = 2
WalkSpeedSliderFill.Parent = WalkSpeedSliderTrack

local WalkSpeedFillCorner = Instance.new("UICorner")
WalkSpeedFillCorner.CornerRadius = UDim.new(1, 0)
WalkSpeedFillCorner.Parent = WalkSpeedSliderFill

local WalkSpeedSliderButton = Instance.new("TextButton")
WalkSpeedSliderButton.Size = UDim2.new(0, 16, 0, 16)
WalkSpeedSliderButton.Position = UDim2.new(0.032, -8, 0.5, -8)
WalkSpeedSliderButton.BackgroundColor3 = COLORS.text
WalkSpeedSliderButton.Text = ""
WalkSpeedSliderButton.ZIndex = 3
WalkSpeedSliderButton.Parent = WalkSpeedSliderTrack

local WalkSpeedSliderButtonCorner = Instance.new("UICorner")
WalkSpeedSliderButtonCorner.CornerRadius = UDim.new(1, 0)
WalkSpeedSliderButtonCorner.Parent = WalkSpeedSliderButton

-- Вкладка Home: Infinite Jump Toggle
local InfiniteJumpFrame = Instance.new("Frame")
InfiniteJumpFrame.Size = UDim2.new(1, -20, 0, 30)
InfiniteJumpFrame.Position = UDim2.new(0, 10, 0, 70)
InfiniteJumpFrame.BackgroundTransparency = 1
InfiniteJumpFrame.ZIndex = 1
InfiniteJumpFrame.Parent = HomeTab

local InfiniteJumpToggle = Instance.new("TextButton")
InfiniteJumpToggle.Size = UDim2.new(0, 22, 0, 22)
InfiniteJumpToggle.Position = UDim2.new(0, 0, 0.5, -11)
InfiniteJumpToggle.BackgroundColor3 = COLORS.disabled
InfiniteJumpToggle.Text = ""
InfiniteJumpToggle.ZIndex = 2
InfiniteJumpToggle.Parent = InfiniteJumpFrame

local InfiniteJumpToggleCorner = Instance.new("UICorner")
InfiniteJumpToggleCorner.CornerRadius = UDim.new(0, 6)
InfiniteJumpToggleCorner.Parent = InfiniteJumpToggle

local InfiniteJumpLabel = Instance.new("TextLabel")
InfiniteJumpLabel.Text = "Infinite Jump"
InfiniteJumpLabel.Size = UDim2.new(1, -30, 1, 0)
InfiniteJumpLabel.Position = UDim2.new(0, 30, 0, 0)
InfiniteJumpLabel.BackgroundTransparency = 1
InfiniteJumpLabel.TextColor3 = COLORS.text
InfiniteJumpLabel.Font = Enum.Font.Gotham
InfiniteJumpLabel.TextSize = 14
InfiniteJumpLabel.TextXAlignment = Enum.TextXAlignment.Left
InfiniteJumpLabel.ZIndex = 1
InfiniteJumpLabel.Parent = InfiniteJumpFrame

-- Вкладка Farm: Auto Blow Bubble
local AutoBubbleFrame = Instance.new("Frame")
AutoBubbleFrame.Size = UDim2.new(1, -20, 0, 30)
AutoBubbleFrame.Position = UDim2.new(0, 10, 0, 10)
AutoBubbleFrame.BackgroundTransparency = 1
AutoBubbleFrame.ZIndex = 1
AutoBubbleFrame.Parent = FarmTab

local AutoBubbleToggle = Instance.new("TextButton")
AutoBubbleToggle.Size = UDim2.new(0, 22, 0, 22)
AutoBubbleToggle.Position = UDim2.new(0, 0, 0.5, -11)
AutoBubbleToggle.BackgroundColor3 = COLORS.disabled
AutoBubbleToggle.Text = ""
AutoBubbleToggle.ZIndex = 2
AutoBubbleToggle.Parent = AutoBubbleFrame

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 6)
ToggleCorner.Parent = AutoBubbleToggle

local AutoBubbleLabel = Instance.new("TextLabel")
AutoBubbleLabel.Text = "Auto Blow Bubble"
AutoBubbleLabel.Size = UDim2.new(1, -30, 1, 0)
AutoBubbleLabel.Position = UDim2.new(0, 30, 0, 0)
AutoBubbleLabel.BackgroundTransparency = 1
AutoBubbleLabel.TextColor3 = COLORS.text
AutoBubbleLabel.Font = Enum.Font.Gotham
AutoBubbleLabel.TextSize = 14
AutoBubbleLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoBubbleLabel.ZIndex = 1
AutoBubbleLabel.Parent = AutoBubbleFrame

-- Вкладка Farm: Frequency Slider
local FrequencyFrame = Instance.new("Frame")
FrequencyFrame.Size = UDim2.new(1, -20, 0, 50)
FrequencyFrame.Position = UDim2.new(0, 10, 0, 50)
FrequencyFrame.BackgroundTransparency = 1
FrequencyFrame.ZIndex = 1
FrequencyFrame.Parent = FarmTab

local FrequencyLabel = Instance.new("TextLabel")
FrequencyLabel.Text = "Frequency: 0.5s"
FrequencyLabel.Size = UDim2.new(1, 0, 0, 20)
FrequencyLabel.BackgroundTransparency = 1
FrequencyLabel.TextColor3 = COLORS.text
FrequencyLabel.Font = Enum.Font.Gotham
FrequencyLabel.TextSize = 14
FrequencyLabel.TextXAlignment = Enum.TextXAlignment.Left
FrequencyLabel.ZIndex = 1
FrequencyLabel.Parent = FrequencyFrame

local SliderTrack = Instance.new("TextButton")
SliderTrack.Size = UDim2.new(1, 0, 0, 6)
SliderTrack.Position = UDim2.new(0, 0, 0, 30)
SliderTrack.BackgroundColor3 = COLORS.disabled
SliderTrack.Text = ""
SliderTrack.ZIndex = 1
SliderTrack.Parent = FrequencyFrame

local TrackCorner = Instance.new("UICorner")
TrackCorner.CornerRadius = UDim.new(1, 0)
TrackCorner.Parent = SliderTrack

local SliderFill = Instance.new("Frame")
SliderFill.Size = UDim2.new(0.5, 0, 1, 0)
SliderFill.BackgroundColor3 = COLORS.accent
SliderFill.ZIndex = 2
SliderFill.Parent = SliderTrack

local FillCorner = Instance.new("UICorner")
FillCorner.CornerRadius = UDim.new(1, 0)
FillCorner.Parent = SliderFill

local SliderButton = Instance.new("TextButton")
SliderButton.Size = UDim2.new(0, 16, 0, 16)
SliderButton.Position = UDim2.new(0.5, -8, 0.5, -8)
SliderButton.BackgroundColor3 = COLORS.text
SliderButton.Text = ""
SliderButton.ZIndex = 3
SliderButton.Parent = SliderTrack

local SliderButtonCorner = Instance.new("UICorner")
SliderButtonCorner.CornerRadius = UDim.new(1, 0)
SliderButtonCorner.Parent = SliderButton

-- Вкладка Farm: Auto Sell Bubble
local AutoSellFrame = Instance.new("Frame")
AutoSellFrame.Size = UDim2.new(1, -20, 0, 30)
AutoSellFrame.Position = UDim2.new(0, 10, 0, 110)
AutoSellFrame.BackgroundTransparency = 1
AutoSellFrame.ZIndex = 1
AutoSellFrame.Parent = FarmTab

local AutoSellToggle = Instance.new("TextButton")
AutoSellToggle.Size = UDim2.new(0, 22, 0, 22)
AutoSellToggle.Position = UDim2.new(0, 0, 0.5, -11)
AutoSellToggle.BackgroundColor3 = COLORS.disabled
AutoSellToggle.Text = ""
AutoSellToggle.ZIndex = 2
AutoSellToggle.Parent = AutoSellFrame

local SellToggleCorner = Instance.new("UICorner")
SellToggleCorner.CornerRadius = UDim.new(0, 6)
SellToggleCorner.Parent = AutoSellToggle

local AutoSellLabel = Instance.new("TextLabel")
AutoSellLabel.Text = "Auto Sell Bubble"
AutoSellLabel.Size = UDim2.new(1, -30, 1, 0)
AutoSellLabel.Position = UDim2.new(0, 30, 0, 0)
AutoSellLabel.BackgroundTransparency = 1
AutoSellLabel.TextColor3 = COLORS.text
AutoSellLabel.Font = Enum.Font.Gotham
AutoSellLabel.TextSize = 14
AutoSellLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoSellLabel.ZIndex = 1
AutoSellLabel.Parent = AutoSellFrame

-- Вкладка Farm: Auto Farm Toggle
local AutoFarmFrame = Instance.new("Frame")
AutoFarmFrame.Size = UDim2.new(1, -20, 0, 30)
AutoFarmFrame.Position = UDim2.new(0, 10, 0, 150)
AutoFarmFrame.BackgroundTransparency = 1
AutoFarmFrame.ZIndex = 1
AutoFarmFrame.Parent = FarmTab

local AutoFarmToggle = Instance.new("TextButton")
AutoFarmToggle.Size = UDim2.new(0, 22, 0, 22)
AutoFarmToggle.Position = UDim2.new(0, 0, 0.5, -11)
AutoFarmToggle.BackgroundColor3 = COLORS.disabled
AutoFarmToggle.Text = ""
AutoFarmToggle.ZIndex = 2
AutoFarmToggle.Parent = AutoFarmFrame

local FarmToggleCorner = Instance.new("UICorner")
FarmToggleCorner.CornerRadius = UDim.new(0, 6)
FarmToggleCorner.Parent = AutoFarmToggle

local AutoFarmLabel = Instance.new("TextLabel")
AutoFarmLabel.Text = "Auto Farm"
AutoFarmLabel.Size = UDim2.new(1, -30, 1, 0)
AutoFarmLabel.Position = UDim2.new(0, 30, 0, 0)
AutoFarmLabel.BackgroundTransparency = 1
AutoFarmLabel.TextColor3 = COLORS.text
AutoFarmLabel.Font = Enum.Font.Gotham
AutoFarmLabel.TextSize = 14
AutoFarmLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoFarmLabel.ZIndex = 1
AutoFarmLabel.Parent = AutoFarmFrame

-- Вкладка Farm: Collect Delay Slider
local CollectDelayFrame = Instance.new("Frame")
CollectDelayFrame.Size = UDim2.new(1, -20, 0, 50)
CollectDelayFrame.Position = UDim2.new(0, 10, 0, 190)
CollectDelayFrame.BackgroundTransparency = 1
CollectDelayFrame.ZIndex = 1
CollectDelayFrame.Parent = FarmTab

local CollectDelayLabel = Instance.new("TextLabel")
CollectDelayLabel.Text = "Collect Delay: 0.1s"
CollectDelayLabel.Size = UDim2.new(1, 0, 0, 20)
CollectDelayLabel.BackgroundTransparency = 1
CollectDelayLabel.TextColor3 = COLORS.text
CollectDelayLabel.Font = Enum.Font.Gotham
CollectDelayLabel.TextSize = 14
CollectDelayLabel.TextXAlignment = Enum.TextXAlignment.Left
CollectDelayLabel.ZIndex = 1
CollectDelayLabel.Parent = CollectDelayFrame

local CollectDelaySliderTrack = Instance.new("TextButton")
CollectDelaySliderTrack.Size = UDim2.new(1, 0, 0, 6)
CollectDelaySliderTrack.Position = UDim2.new(0, 0, 0, 30)
CollectDelaySliderTrack.BackgroundColor3 = COLORS.disabled
CollectDelaySliderTrack.Text = ""
CollectDelaySliderTrack.ZIndex = 1
CollectDelaySliderTrack.Parent = CollectDelayFrame

local CollectDelayTrackCorner = Instance.new("UICorner")
CollectDelayTrackCorner.CornerRadius = UDim.new(1, 0)
CollectDelayTrackCorner.Parent = CollectDelaySliderTrack

local CollectDelaySliderFill = Instance.new("Frame")
CollectDelaySliderFill.Size = UDim2.new(0, 0, 1, 0)
CollectDelaySliderFill.BackgroundColor3 = COLORS.accent
CollectDelaySliderFill.ZIndex = 2
CollectDelaySliderFill.Parent = CollectDelaySliderTrack

local CollectDelayFillCorner = Instance.new("UICorner")
CollectDelayFillCorner.CornerRadius = UDim.new(1, 0)
CollectDelayFillCorner.Parent = CollectDelaySliderFill

local CollectDelaySliderButton = Instance.new("TextButton")
CollectDelaySliderButton.Size = UDim2.new(0, 16, 0, 16)
CollectDelaySliderButton.Position = UDim2.new(0, -8, 0.5, -8)
CollectDelaySliderButton.BackgroundColor3 = COLORS.text
CollectDelaySliderButton.Text = ""
CollectDelaySliderButton.ZIndex = 3
CollectDelaySliderButton.Parent = CollectDelaySliderTrack

local CollectDelaySliderButtonCorner = Instance.new("UICorner")
CollectDelaySliderButtonCorner.CornerRadius = UDim.new(1, 0)
CollectDelaySliderButtonCorner.Parent = CollectDelaySliderButton

-- Вкладка Misc: Auto Collect Playtime
local AutoCollectFrame = Instance.new("Frame")
AutoCollectFrame.Size = UDim2.new(1, -20, 0, 30)
AutoCollectFrame.Position = UDim2.new(0, 10, 0, 10)
AutoCollectFrame.BackgroundTransparency = 1
AutoCollectFrame.ZIndex = 1
AutoCollectFrame.Parent = MiscTab

local AutoCollectToggle = Instance.new("TextButton")
AutoCollectToggle.Size = UDim2.new(0, 22, 0, 22)
AutoCollectToggle.Position = UDim2.new(0, 0, 0.5, -11)
AutoCollectToggle.BackgroundColor3 = COLORS.disabled
AutoCollectToggle.Text = ""
AutoCollectToggle.ZIndex = 2
AutoCollectToggle.Parent = AutoCollectFrame

local CollectToggleCorner = Instance.new("UICorner")
CollectToggleCorner.CornerRadius = UDim.new(0, 6)
CollectToggleCorner.Parent = AutoCollectToggle

local AutoCollectLabel = Instance.new("TextLabel")
AutoCollectLabel.Text = "Auto Collect Playtime"
AutoCollectLabel.Size = UDim2.new(1, -30, 1, 0)
AutoCollectLabel.Position = UDim2.new(0, 30, 0, 0)
AutoCollectLabel.BackgroundTransparency = 1
AutoCollectLabel.TextColor3 = COLORS.text
AutoCollectLabel.Font = Enum.Font.Gotham
AutoCollectLabel.TextSize = 14
AutoCollectLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoCollectLabel.ZIndex = 1
AutoCollectLabel.Parent = AutoCollectFrame

-- Вкладка Misc: Golden Chest Highlight
local GoldenChestHighlightFrame = Instance.new("Frame")
GoldenChestHighlightFrame.Size = UDim2.new(1, -20, 0, 30)
GoldenChestHighlightFrame.Position = UDim2.new(0, 10, 0, 50)
GoldenChestHighlightFrame.BackgroundTransparency = 1
GoldenChestHighlightFrame.ZIndex = 1
GoldenChestHighlightFrame.Parent = MiscTab

local GoldenChestHighlightToggle = Instance.new("TextButton")
GoldenChestHighlightToggle.Size = UDim2.new(0, 22, 0, 22)
GoldenChestHighlightToggle.Position = UDim2.new(0, 0, 0.5, -11)
GoldenChestHighlightToggle.BackgroundColor3 = COLORS.disabled
GoldenChestHighlightToggle.Text = ""
GoldenChestHighlightToggle.ZIndex = 2
GoldenChestHighlightToggle.Parent = GoldenChestHighlightFrame

local GoldenChestHighlightToggleCorner = Instance.new("UICorner")
GoldenChestHighlightToggleCorner.CornerRadius = UDim.new(0, 6)
GoldenChestHighlightToggleCorner.Parent = GoldenChestHighlightToggle

local GoldenChestHighlightLabel = Instance.new("TextLabel")
GoldenChestHighlightLabel.Text = "Golden Chest Highlight"
GoldenChestHighlightLabel.Size = UDim2.new(1, -30, 1, 0)
GoldenChestHighlightLabel.Position = UDim2.new(0, 30, 0, 0)
GoldenChestHighlightLabel.BackgroundTransparency = 1
GoldenChestHighlightLabel.TextColor3 = COLORS.text
GoldenChestHighlightLabel.Font = Enum.Font.Gotham
GoldenChestHighlightLabel.TextSize = 14
GoldenChestHighlightLabel.TextXAlignment = Enum.TextXAlignment.Left
GoldenChestHighlightLabel.ZIndex = 1
GoldenChestHighlightLabel.Parent = GoldenChestHighlightFrame

-- Вкладка Misc: Black-Market
local BlackMarketFrame = Instance.new("Frame")
BlackMarketFrame.Size = UDim2.new(1, -20, 0, 30)
BlackMarketFrame.Position = UDim2.new(0, 10, 0, 90)
BlackMarketFrame.BackgroundTransparency = 1
BlackMarketFrame.ZIndex = 1
BlackMarketFrame.Parent = MiscTab

local BlackMarketToggle = Instance.new("TextButton")
BlackMarketToggle.Size = UDim2.new(0, 22, 0, 22)
BlackMarketToggle.Position = UDim2.new(0, 0, 0.5, -11)
BlackMarketToggle.BackgroundColor3 = COLORS.disabled
BlackMarketToggle.Text = ""
BlackMarketToggle.ZIndex = 2
BlackMarketToggle.Parent = BlackMarketFrame

local BlackMarketToggleCorner = Instance.new("UICorner")
BlackMarketToggleCorner.CornerRadius = UDim.new(0, 6)
BlackMarketToggleCorner.Parent = BlackMarketToggle

local BlackMarketLabel = Instance.new("TextLabel")
BlackMarketLabel.Text = "Black-Market (Need Mastery)"
BlackMarketLabel.Size = UDim2.new(1, -30, 1, 0)
BlackMarketLabel.Position = UDim2.new(0, 30, 0, 0)
BlackMarketLabel.BackgroundTransparency = 1
BlackMarketLabel.TextColor3 = COLORS.text
BlackMarketLabel.Font = Enum.Font.Gotham
BlackMarketLabel.TextSize = 14
BlackMarketLabel.TextXAlignment = Enum.TextXAlignment.Left
BlackMarketLabel.ZIndex = 1
BlackMarketLabel.Parent = BlackMarketFrame

-- Вкладка Misc: Auto-Collect Wheel Tickets
local AutoWheelTicketsFrame = Instance.new("Frame")
AutoWheelTicketsFrame.Size = UDim2.new(1, -20, 0, 30)
AutoWheelTicketsFrame.Position = UDim2.new(0, 10, 0, 130)
AutoWheelTicketsFrame.BackgroundTransparency = 1
AutoWheelTicketsFrame.ZIndex = 1
AutoWheelTicketsFrame.Parent = MiscTab

local AutoWheelTicketsToggle = Instance.new("TextButton")
AutoWheelTicketsToggle.Size = UDim2.new(0, 22, 0, 22)
AutoWheelTicketsToggle.Position = UDim2.new(0, 0, 0.5, -11)
AutoWheelTicketsToggle.BackgroundColor3 = COLORS.disabled
AutoWheelTicketsToggle.Text = ""
AutoWheelTicketsToggle.ZIndex = 2
AutoWheelTicketsToggle.Parent = AutoWheelTicketsFrame

local WheelTicketsToggleCorner = Instance.new("UICorner")
WheelTicketsToggleCorner.CornerRadius = UDim.new(0, 6)
WheelTicketsToggleCorner.Parent = AutoWheelTicketsToggle

local AutoWheelTicketsLabel = Instance.new("TextLabel")
AutoWheelTicketsLabel.Text = "Auto-Collect Wheel Tickets"
AutoWheelTicketsLabel.Size = UDim2.new(1, -30, 1, 0)
AutoWheelTicketsLabel.Position = UDim2.new(0, 30, 0, 0)
AutoWheelTicketsLabel.BackgroundTransparency = 1
AutoWheelTicketsLabel.TextColor3 = COLORS.text
AutoWheelTicketsLabel.Font = Enum.Font.Gotham
AutoWheelTicketsLabel.TextSize = 14
AutoWheelTicketsLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoWheelTicketsLabel.ZIndex = 1
AutoWheelTicketsLabel.Parent = AutoWheelTicketsFrame

-- Вкладка Misc: Auto-Open Void Chest
local AutoVoidChestFrame = Instance.new("Frame")
AutoVoidChestFrame.Size = UDim2.new(1, -20, 0, 30)
AutoVoidChestFrame.Position = UDim2.new(0, 10, 0, 170)
AutoVoidChestFrame.BackgroundTransparency = 1
AutoVoidChestFrame.ZIndex = 1
AutoVoidChestFrame.Parent = MiscTab

local AutoVoidChestToggle = Instance.new("TextButton")
AutoVoidChestToggle.Size = UDim2.new(0, 22, 0, 22)
AutoVoidChestToggle.Position = UDim2.new(0, 0, 0.5, -11)
AutoVoidChestToggle.BackgroundColor3 = COLORS.disabled
AutoVoidChestToggle.Text = ""
AutoVoidChestToggle.ZIndex = 2
AutoVoidChestToggle.Parent = AutoVoidChestFrame

local VoidChestToggleCorner = Instance.new("UICorner")
VoidChestToggleCorner.CornerRadius = UDim.new(0, 6)
VoidChestToggleCorner.Parent = AutoVoidChestToggle

local AutoVoidChestLabel = Instance.new("TextLabel")
AutoVoidChestLabel.Text = "Auto-Open Void Chest"
AutoVoidChestLabel.Size = UDim2.new(1, -30, 1, 0)
AutoVoidChestLabel.Position = UDim2.new(0, 30, 0, 0)
AutoVoidChestLabel.BackgroundTransparency = 1
AutoVoidChestLabel.TextColor3 = COLORS.text
AutoVoidChestLabel.Font = Enum.Font.Gotham
AutoVoidChestLabel.TextSize = 14
AutoVoidChestLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoVoidChestLabel.ZIndex = 1
AutoVoidChestLabel.Parent = AutoVoidChestFrame

-- Вкладка Misc: Auto-Open Giant Chest
local AutoGiantChestFrame = Instance.new("Frame")
AutoGiantChestFrame.Size = UDim2.new(1, -20, 0, 30)
AutoGiantChestFrame.Position = UDim2.new(0, 10, 0, 210)
AutoGiantChestFrame.BackgroundTransparency = 1
AutoGiantChestFrame.ZIndex = 1
AutoGiantChestFrame.Parent = MiscTab

local AutoGiantChestToggle = Instance.new("TextButton")
AutoGiantChestToggle.Size = UDim2.new(0, 22, 0, 22)
AutoGiantChestToggle.Position = UDim2.new(0, 0, 0.5, -11)
AutoGiantChestToggle.BackgroundColor3 = COLORS.disabled
AutoGiantChestToggle.Text = ""
AutoGiantChestToggle.ZIndex = 2
AutoGiantChestToggle.Parent = AutoGiantChestFrame

local GiantChestToggleCorner = Instance.new("UICorner")
GiantChestToggleCorner.CornerRadius = UDim.new(0, 6)
GiantChestToggleCorner.Parent = AutoGiantChestToggle

local AutoGiantChestLabel = Instance.new("TextLabel")
AutoGiantChestLabel.Text = "Auto-Open Giant Chest"
AutoGiantChestLabel.Size = UDim2.new(1, -30, 1, 0)
AutoGiantChestLabel.Position = UDim2.new(0, 30, 0, 0)
AutoGiantChestLabel.BackgroundTransparency = 1
AutoGiantChestLabel.TextColor3 = COLORS.text
AutoGiantChestLabel.Font = Enum.Font.Gotham
AutoGiantChestLabel.TextSize = 14
AutoGiantChestLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoGiantChestLabel.ZIndex = 1
AutoGiantChestLabel.Parent = AutoGiantChestFrame

-- Вкладка Enchant: Auto-Enchant
local AutoEnchantFrame = Instance.new("Frame")
AutoEnchantFrame.Size = UDim2.new(1, -20, 0, 30)
AutoEnchantFrame.Position = UDim2.new(0, 10, 0, 10)
AutoEnchantFrame.BackgroundTransparency = 1
AutoEnchantFrame.ZIndex = 1
AutoEnchantFrame.Parent = EnchantTab

local AutoEnchantToggle = Instance.new("TextButton")
AutoEnchantToggle.Size = UDim2.new(0, 22, 0, 22)
AutoEnchantToggle.Position = UDim2.new(0, 30, 0.5, -11)
AutoEnchantToggle.BackgroundColor3 = COLORS.disabled
AutoEnchantToggle.Text = ""
AutoEnchantToggle.ZIndex = 2
AutoEnchantToggle.Parent = AutoEnchantFrame

local AutoEnchantToggleCorner = Instance.new("UICorner")
AutoEnchantToggleCorner.CornerRadius = UDim.new(0, 6)
AutoEnchantToggleCorner.Parent = AutoEnchantToggle

local AutoEnchantLabel = Instance.new("TextLabel")
AutoEnchantLabel.Text = "Auto-Enchant"
AutoEnchantLabel.Size = UDim2.new(1, -60, 1, 0)
AutoEnchantLabel.Position = UDim2.new(0, 60, 0, 0)
AutoEnchantLabel.BackgroundTransparency = 1
AutoEnchantLabel.TextColor3 = COLORS.text
AutoEnchantLabel.Font = Enum.Font.Gotham
AutoEnchantLabel.TextSize = 14
AutoEnchantLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoEnchantLabel.ZIndex = 1
AutoEnchantLabel.Parent = AutoEnchantFrame

-- Кнопка выпадающего списка энчантов
local EnchantDropdownButton = Instance.new("TextButton")
EnchantDropdownButton.Size = UDim2.new(0, 22, 0, 22)
EnchantDropdownButton.Position = UDim2.new(0, 0, 0.5, -11)
EnchantDropdownButton.BackgroundColor3 = COLORS.disabled
EnchantDropdownButton.Text = "↓"
EnchantDropdownButton.TextColor3 = COLORS.text
EnchantDropdownButton.Font = Enum.Font.GothamBold
EnchantDropdownButton.TextSize = 14
EnchantDropdownButton.ZIndex = 2
EnchantDropdownButton.Parent = AutoEnchantFrame

local EnchantDropdownCorner = Instance.new("UICorner")
EnchantDropdownCorner.CornerRadius = UDim.new(0, 6)
EnchantDropdownCorner.Parent = EnchantDropdownButton

-- Выпадающий список энчантов
local EnchantDropdownFrame = Instance.new("Frame")
EnchantDropdownFrame.Size = UDim2.new(0, 120, 0, 0)
EnchantDropdownFrame.Position = UDim2.new(0, 0, 1, 0)
EnchantDropdownFrame.BackgroundColor3 = COLORS.tab_selected
EnchantDropdownFrame.ClipsDescendants = true
EnchantDropdownFrame.Visible = false
EnchantDropdownFrame.ZIndex = 3
EnchantDropdownFrame.Parent = AutoEnchantFrame

local EnchantDropdownList = Instance.new("UIListLayout")
EnchantDropdownList.SortOrder = Enum.SortOrder.LayoutOrder
EnchantDropdownList.Parent = EnchantDropdownFrame

local enchantOptions = {
    "✨ Gleaming I", "✨ Gleaming II", "✨ Gleaming III",
    "⚡️ Team Up I", "⚡️ Team Up II", "⚡️ Team Up III", "⚡️ Team Up IV", "⚡️ Team Up V",
    "🫧 Bubbler I", "🫧 Bubbler II", "🫧 Bubbler III", "🫧 Bubbler IV", "🫧 Bubbler V",
    "💰 Looter I", "💰 Looter II", "💰 Looter III", "💰 Looter IV", "💰 Looter V"
}

for i, enchant in ipairs(enchantOptions) do
    local EnchantOption = Instance.new("TextButton")
    EnchantOption.Size = UDim2.new(1, 0, 0, 20)
    EnchantOption.BackgroundColor3 = COLORS.tab_selected
    EnchantOption.Text = enchant
    EnchantOption.TextColor3 = COLORS.text
    EnchantOption.Font = Enum.Font.Gotham
    EnchantOption.TextSize = 12
    EnchantOption.ZIndex = 3
    EnchantOption.Parent = EnchantDropdownFrame
end

-- Выбор метода Auto-Enchant
local EnchantMethodFrame = Instance.new("Frame")
EnchantMethodFrame.Size = UDim2.new(1, -20, 0, 30)
EnchantMethodFrame.Position = UDim2.new(0, 10, 0, 50)
EnchantMethodFrame.BackgroundTransparency = 1
EnchantMethodFrame.ZIndex = 1
EnchantMethodFrame.Parent = EnchantTab

local EnchantMethodLabel = Instance.new("TextLabel")
EnchantMethodLabel.Text = "Method: Auto Enchant with Gems"
EnchantMethodLabel.Size = UDim2.new(0, 230, 1, 0)
EnchantMethodLabel.BackgroundTransparency = 1
EnchantMethodLabel.TextColor3 = COLORS.text
EnchantMethodLabel.Font = Enum.Font.Gotham
EnchantMethodLabel.TextSize = 14
EnchantMethodLabel.TextXAlignment = Enum.TextXAlignment.Left
EnchantMethodLabel.ZIndex = 1
EnchantMethodLabel.Parent = EnchantMethodFrame

local EnchantMethodDropdownButton = Instance.new("TextButton")
EnchantMethodDropdownButton.Size = UDim2.new(0, 22, 0, 22)
EnchantMethodDropdownButton.Position = UDim2.new(0, 250, 0.5, -11)
EnchantMethodDropdownButton.BackgroundColor3 = COLORS.disabled
EnchantMethodDropdownButton.Text = "↓"
EnchantMethodDropdownButton.TextColor3 = COLORS.text
EnchantMethodDropdownButton.Font = Enum.Font.GothamBold
EnchantMethodDropdownButton.TextSize = 14
EnchantMethodDropdownButton.ZIndex = 2
EnchantMethodDropdownButton.Parent = EnchantMethodFrame

local EnchantMethodDropdownCorner = Instance.new("UICorner")
EnchantMethodDropdownCorner.CornerRadius = UDim.new(0, 6)
EnchantMethodDropdownCorner.Parent = EnchantMethodDropdownButton

local EnchantMethodDropdownFrame = Instance.new("Frame")
EnchantMethodDropdownFrame.Size = UDim2.new(0, 150, 0, 0)
EnchantMethodDropdownFrame.Position = UDim2.new(0, 250, 1, 0)
EnchantMethodDropdownFrame.BackgroundColor3 = COLORS.tab_selected
EnchantMethodDropdownFrame.ClipsDescendants = true
EnchantMethodDropdownFrame.Visible = false
EnchantMethodDropdownFrame.ZIndex = 3
EnchantMethodDropdownFrame.Parent = EnchantMethodFrame

local EnchantMethodList = Instance.new("UIListLayout")
EnchantMethodList.SortOrder = Enum.SortOrder.LayoutOrder
EnchantMethodList.Parent = EnchantMethodDropdownFrame

local methodOptions = {
    "Auto Enchant with Gems",
    "Auto Enchant with Reroll Orbs"
}

for i, method in ipairs(methodOptions) do
    local MethodOption = Instance.new("TextButton")
    MethodOption.Size = UDim2.new(1, 0, 0, 20)
    MethodOption.BackgroundColor3 = COLORS.tab_selected
    MethodOption.Text = method
    MethodOption.TextColor3 = COLORS.text
    MethodOption.Font = Enum.Font.Gotham
    MethodOption.TextSize = 12
    MethodOption.ZIndex = 3
    MethodOption.Parent = EnchantMethodDropdownFrame
end

-- Переменные
local autoBubbleEnabled = false
local autoSellEnabled = false
local autoCollectEnabled = false
local autoFarmEnabled = false
local infiniteJumpEnabled = false
local goldenChestHighlightEnabled = false
local blackMarketEnabled = false
local autoWheelTicketsEnabled = false
local autoVoidChestEnabled = false
local autoGiantChestEnabled = false
local autoEnchantEnabled = false
local bubbleCooldown = 0.5
local collectDelay = 0.1
local walkSpeed = 16
local isDragging = false
local isDraggingCollect = false
local isDraggingWalkSpeed = false
local isMinimized = false
local isDraggingWindow = false
local startPos = nil
local dragStart = nil
local scriptActive = true
local goldenChestHighlights = {}
local selectedEnchant = nil
local selectedMethod = "Auto Enchant with Gems"
local enchantDropdownOpen = false
local methodDropdownOpen = false

-- Список объектов для подсветки
local goldenChestPaths = {
    "workspace.Rendered.Rifts['golden-chest'].Chest.Decoration.Bottom",
    "workspace.Rendered.Rifts['golden-chest'].Chest.Decoration.Coins",
    "workspace.Rendered.Rifts['golden-chest'].Chest.Decoration.Top",
    "workspace.Rendered.Rifts['golden-chest'].Chest['golden-chest']"
}

-- Анимации
local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

-- Инициализация ремоута
if not checkPickupRemote() then
    scriptActive = false
    return
end

-- Функция переключения вкладок
local function switchTab(selectedTab, selectedButton)
    HomeTab.Visible = selectedTab == HomeTab
    FarmTab.Visible = selectedTab == FarmTab
    MiscTab.Visible = selectedTab == MiscTab
    EnchantTab.Visible = selectedTab == EnchantTab
    HomeTabButton.BackgroundColor3 = selectedTab == HomeTab and COLORS.tab_selected or COLORS.tab_unselected
    FarmTabButton.BackgroundColor3 = selectedTab == FarmTab and COLORS.tab_selected or COLORS.tab_unselected
    MiscTabButton.BackgroundColor3 = selectedTab == MiscTab and COLORS.tab_selected or COLORS.tab_unselected
    EnchantTabButton.BackgroundColor3 = selectedTab == EnchantTab and COLORS.tab_selected or COLORS.tab_unselected
end

-- Функция получения объекта по пути
local function getObjectFromPath(path)
    local success, result = pcall(function()
        local current = game
        for part in path:gmatch("[^%.%[%]]+") do
            if part:match("^%['.-'%]$") then
                local key = part:match("%['(.-)'%]")
                current = current[key]
            else
                current = current[part]
            end
        end
        return current
    end)
    if success and result and result:IsDescendantOf(game) then
        return result
    end
    return nil
end

-- Функция создания подсветки
local function createHighlight(object)
    if not object then return nil end
    local highlight = Instance.new("Highlight")
    highlight.Name = "GoldenChestHighlight"
    highlight.Adornee = object
    highlight.FillColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.8
    highlight.OutlineColor = Color3.fromRGB(255, 165, 0)
    highlight.OutlineTransparency = 0
    highlight.Parent = object
    return highlight
end

-- Функция управления подсветкой
local function manageGoldenChestHighlight(enabled)
    for _, highlight in pairs(goldenChestHighlights) do
        if highlight and highlight.Parent then
            highlight.Enabled = enabled
        end
    end
    if not enabled then return end
    local anyObjectFound = false
    for _, path in ipairs(goldenChestPaths) do
        if not goldenChestHighlights[path] or not goldenChestHighlights[path].Parent then
            local object = getObjectFromPath(path)
            if object then
                anyObjectFound = true
                local highlight = createHighlight(object)
                if highlight then
                    goldenChestHighlights[path] = highlight
                    highlight.Enabled = true
                end
            end
        else
            anyObjectFound = true
        end
    end
    if not anyObjectFound then
        task.spawn(function()
            while scriptActive and enabled and not anyObjectFound do
                for _, path in ipairs(goldenChestPaths) do
                    if not goldenChestHighlights[path] or not goldenChestHighlights[path].Parent then
                        local object = getObjectFromPath(path)
                        if object then
                            local highlight = createHighlight(object)
                            if highlight then
                                goldenChestHighlights[path] = highlight
                                highlight.Enabled = true
                                anyObjectFound = true
                            end
                        end
                    end
                end
                task.wait(1)
            end
        end)
    end
end

-- Функция покупки в Black-Market
local function buyBlackMarket()
    for i = 1, 3 do
        local success, error = pcall(function()
            local args = { [1] = "BuyShopItem", [2] = "shard-shop", [3] = i }
            bubbleRemote:WaitForChild("Event"):FireServer(unpack(args))
        end)
        if not success then
            warn("Failed to buy Black-Market item " .. i .. ": " .. error)
        end
        task.wait(0.1)
    end
end

-- Функция надутия пузыря
local function blowBubble()
    local success, error = pcall(function()
        bubbleRemote:WaitForChild("Event"):FireServer("BlowBubble")
    end)
    if not success then
        warn("Failed to blow bubble: " .. error)
    end
end

-- Функция продажи пузыря
local function sellBubble()
    local success, error = pcall(function()
        local args = { [1] = "SellBubble" }
        bubbleRemote:WaitForChild("Event"):FireServer(unpack(args))
    end)
    if not success then
        warn("Failed to sell bubble: " .. error)
    end
end

-- Функция сбора игрового времени
local function collectPlaytime()
    for i = 1, 9 do
        local success, error = pcall(function()
            local args = { [1] = "ClaimPlaytime", [2] = i }
            bubbleRemote:WaitForChild("Function"):InvokeServer(unpack(args))
        end)
        if not success then
            warn("Failed to collect playtime " .. i .. ": " .. error)
        end
        task.wait(0.1)
    end
end

-- Функция сбора Wheel Tickets
local function collectWheelTickets()
    local success, error = pcall(function()
        local args = { [1] = "ClaimFreeWheelSpin" }
        bubbleRemote:WaitForChild("Event"):FireServer(unpack(args))
    end)
    if not success then
        warn("Failed to collect wheel tickets: " .. error)
    end
end

-- Функция открытия Void Chest
local function openVoidChest()
    local success, error = pcall(function()
        local args = { [1] = "ClaimChest", [2] = "Void Chest" }
        bubbleRemote:WaitForChild("Event"):FireServer(unpack(args))
    end)
    if not success then
        warn("Failed to open Void Chest: " .. error)
    end
end

-- Функция открытия Giant Chest
local function openGiantChest()
    local success, error = pcall(function()
        local args = { [1] = "ClaimChest", [2] = "GiantJIT Chest" }
        bubbleRemote:WaitForChild("Event"):FireServer(unpack(args))
    end)
    if not success then
        warn("Failed to open Giant Chest: " .. error)
    end
end

-- Функция Auto-Enchant
local function autoEnchant()
    if not autoEnchantEnabled or not selectedEnchant then
        return
    end

    local enchantGuiPath = player.PlayerGui:WaitForChild("ScreenGui", 5)
    if not enchantGuiPath then
        warn("Enchant GUI not found")
        return
    end

    local enchantText
    local success, err = pcall(function()
        enchantText = enchantGuiPath.Enchants.Frame.Inner.Details.Main.Enchants.Enchant1.Title.Text
    end)
    if not success then
        warn("Failed to read enchant text: " .. err)
        return
    end

    if enchantText == selectedEnchant then
        autoEnchantEnabled = false
        AutoEnchantToggle.BackgroundColor3 = COLORS.disabled
        print("Desired enchant " .. selectedEnchant .. " obtained")
        return
    end

    local args
    if selectedMethod == "Auto Enchant with Gems" then
        args = { [1] = "RerollEnchants" }
    else -- Auto Enchant with Reroll Orbs
        args = { [1] = "RerollEnchants", [2] = 1 }
    end

    local remote = game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Function")
    local success, error = pcall(function()
        remote:InvokeServer(unpack(args))
    end)
    if not success then
        warn("Failed to reroll enchant: " .. error)
    end
end

-- Функция автофарма
local function farmCollectibles()
    while autoFarmEnabled and scriptActive do
        local success, rendered = pcall(function()
            return Workspace:WaitForChild("Rendered", 5)
        end)
        if not success or not rendered then
            warn("Workspace.Rendered not found!")
            task.wait(5)
            continue
        end
        local chunkerFolders = {}
        for _, folder in pairs(rendered:GetChildren()) do
            if folder.Name:match("Chunker") and folder:IsA("Folder") and #folder:GetChildren() > 0 then
                table.insert(chunkerFolders, folder)
            end
        end
        if #chunkerFolders == 0 then
            task.wait(5)
            continue
        end
        for _, chunker in ipairs(chunkerFolders) do
            local argsList = {}
            local itemsToRemove = {}
            for _, item in pairs(chunker:GetChildren()) do
                if item.Name:match("^%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x$") then
                    table.insert(argsList, item.Name)
                    table.insert(itemsToRemove, item)
                end
            end
            if #argsList > 0 then
                for i, uid in ipairs(argsList) do
                    local args = { [1] = uid }
                    local success = pcall(function()
                        pickupRemote:FireServer(unpack(args))
                    end)
                    if success then
                        local item = itemsToRemove[i]
                        if item and item.Parent then
                            pcall(function()
                                item:Destroy()
                            end)
                        end
                    end
                    task.wait(collectDelay)
                end
            end
        end
        task.wait(5)
    end
end

-- Функция установки WalkSpeed
local function setWalkSpeed(value)
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = value
        end
    end
end

-- Обработчик бесконечного прыжка
local function onInfiniteJump(input, gameProcessedEvent)
    if infiniteJumpEnabled and input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space and not gameProcessedEvent then
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end
end

-- Обработчики
HomeTabButton.MouseButton1Click:Connect(function()
    switchTab(HomeTab, HomeTabButton)
end)

FarmTabButton.MouseButton1Click:Connect(function()
    switchTab(FarmTab, FarmTabButton)
end)

MiscTabButton.MouseButton1Click:Connect(function()
    switchTab(MiscTab, MiscTabButton)
end)

EnchantTabButton.MouseButton1Click:Connect(function()
    switchTab(EnchantTab, EnchantTabButton)
end)

AutoBubbleToggle.MouseButton1Click:Connect(function()
    autoBubbleEnabled = not autoBubbleEnabled
    local tween = TweenService:Create(AutoBubbleToggle, tweenInfo, {
        BackgroundColor3 = autoBubbleEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

AutoSellToggle.MouseButton1Click:Connect(function()
    autoSellEnabled = not autoSellEnabled
    local tween = TweenService:Create(AutoSellToggle, tweenInfo, {
        BackgroundColor3 = autoSellEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

AutoCollectToggle.MouseButton1Click:Connect(function()
    autoCollectEnabled = not autoCollectEnabled
    local tween = TweenService:Create(AutoCollectToggle, tweenInfo, {
        BackgroundColor3 = autoCollectEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

AutoFarmToggle.MouseButton1Click:Connect(function()
    autoFarmEnabled = not autoFarmEnabled
    local tween = TweenService:Create(AutoFarmToggle, tweenInfo, {
        BackgroundColor3 = autoFarmEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
    if autoFarmEnabled then
        task.spawn(farmCollectibles)
    end
end)

InfiniteJumpToggle.MouseButton1Click:Connect(function()
    infiniteJumpEnabled = not infiniteJumpEnabled
    local tween = TweenService:Create(InfiniteJumpToggle, tweenInfo, {
        BackgroundColor3 = infiniteJumpEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

GoldenChestHighlightToggle.MouseButton1Click:Connect(function()
    goldenChestHighlightEnabled = not goldenChestHighlightEnabled
    local tween = TweenService:Create(GoldenChestHighlightToggle, tweenInfo, {
        BackgroundColor3 = goldenChestHighlightEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
    manageGoldenChestHighlight(goldenChestHighlightEnabled)
end)

BlackMarketToggle.MouseButton1Click:Connect(function()
    blackMarketEnabled = not blackMarketEnabled
    local tween = TweenService:Create(BlackMarketToggle, tweenInfo, {
        BackgroundColor3 = blackMarketEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

AutoWheelTicketsToggle.MouseButton1Click:Connect(function()
    autoWheelTicketsEnabled = not autoWheelTicketsEnabled
    local tween = TweenService:Create(AutoWheelTicketsToggle, tweenInfo, {
        BackgroundColor3 = autoWheelTicketsEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

AutoVoidChestToggle.MouseButton1Click:Connect(function()
    autoVoidChestEnabled = not autoVoidChestEnabled
    local tween = TweenService:Create(AutoVoidChestToggle, tweenInfo, {
        BackgroundColor3 = autoVoidChestEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

AutoGiantChestToggle.MouseButton1Click:Connect(function()
    autoGiantChestEnabled = not autoGiantChestEnabled
    local tween = TweenService:Create(AutoGiantChestToggle, tweenInfo, {
        BackgroundColor3 = autoGiantChestEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

EnchantDropdownButton.MouseButton1Click:Connect(function()
    enchantDropdownOpen = not enchantDropdownOpen
    local targetSize = enchantDropdownOpen and UDim2.new(0, 120, 0, #enchantOptions * 20) or UDim2.new(0, 120, 0, 0)
    local tween = TweenService:Create(EnchantDropdownFrame, tweenInfo, {Size = targetSize})
    EnchantDropdownFrame.Visible = true
    tween:Play()
    tween.Completed:Connect(function()
        if not enchantDropdownOpen then
            EnchantDropdownFrame.Visible = false
        end
    end)
end)

for _, button in pairs(EnchantDropdownFrame:GetChildren()) do
    if button:IsA("TextButton") then
        button.MouseButton1Click:Connect(function()
            selectedEnchant = button.Text
            AutoEnchantLabel.Text = "Auto-Enchant: " .. selectedEnchant
            enchantDropdownOpen = false
            EnchantDropdownFrame.Size = UDim2.new(0, 120, 0, 0)
            EnchantDropdownFrame.Visible = false
        end)
    end
end

EnchantMethodDropdownButton.MouseButton1Click:Connect(function()
    methodDropdownOpen = not methodDropdownOpen
    local targetSize = methodDropdownOpen and UDim2.new(0, 150, 0, #methodOptions * 20) or UDim2.new(0, 150, 0, 0)
    local tween = TweenService:Create(EnchantMethodDropdownFrame, tweenInfo, {Size = targetSize})
    EnchantMethodDropdownFrame.Visible = true
    tween:Play()
    tween.Completed:Connect(function()
        if not methodDropdownOpen then
            EnchantMethodDropdownFrame.Visible = false
        end
    end)
end)

for _, button in pairs(EnchantMethodDropdownFrame:GetChildren()) do
    if button:IsA("TextButton") then
        button.MouseButton1Click:Connect(function()
            selectedMethod = button.Text
            EnchantMethodLabel.Text = "Method: " .. selectedMethod
            methodDropdownOpen = false
            EnchantMethodDropdownFrame.Size = UDim2.new(0, 150, 0, 0)
            EnchantMethodDropdownFrame.Visible = false
        end)
    end
end

AutoEnchantToggle.MouseButton1Click:Connect(function()
    if not selectedEnchant then
        warn("No enchant selected")
        return
    end
    autoEnchantEnabled = not autoEnchantEnabled
    local tween = TweenService:Create(AutoEnchantToggle, tweenInfo, {
        BackgroundColor3 = autoEnchantEnabled and COLORS.accent or COLORS.disabled
    })
    tween:Play()
end)

local function updateSlider(value)
    value = math.clamp(value, 0.1, 2)
    local percent = (value - 0.1) / 1.9
    local tween = TweenService:Create(SliderFill, tweenInfo, {Size = UDim2.new(percent, 0, 1, 0)})
    local tween2 = TweenService:Create(SliderButton, tweenInfo, {Position = UDim2.new(percent, -8, 0.5, -8)})
    tween:Play()
    tween2:Play()
    bubbleCooldown = math.round(value * 10) / 10
    FrequencyLabel.Text = string.format("Frequency: %.1fs", bubbleCooldown)
end

local function updateCollectDelaySlider(value)
    value = math.clamp(value, 0.1, 2)
    local percent = (value - 0.1) / 1.9
    local tween = TweenService:Create(CollectDelaySliderFill, tweenInfo, {Size = UDim2.new(percent, 0, 1, 0)})
    local tween2 = TweenService:Create(CollectDelaySliderButton, tweenInfo, {Position = UDim2.new(percent, -8, 0.5, -8)})
    tween:Play()
    tween2:Play()
    collectDelay = math.round(value * 10) / 10
    CollectDelayLabel.Text = string.format("Collect Delay: %.1fs", collectDelay)
end

local function updateWalkSpeedSlider(value)
    value = math.clamp(value, 10, 200)
    local percent = (value - 10) / 190
    local tween = TweenService:Create(WalkSpeedSliderFill, tweenInfo, {Size = UDim2.new(percent, 0, 1, 0)})
    local tween2 = TweenService:Create(WalkSpeedSliderButton, tweenInfo, {Position = UDim2.new(percent, -8, 0.5, -8)})
    tween:Play()
    tween2:Play()
    walkSpeed = math.round(value)
    WalkSpeedLabel.Text = string.format("WalkSpeed: %d", walkSpeed)
    setWalkSpeed(walkSpeed)
end

SliderButton.MouseButton1Down:Connect(function()
    isDragging = true
end)

SliderTrack.MouseButton1Down:Connect(function()
    isDragging = true
    local mousePos = UserInputService:GetMouseLocation()
    local sliderPos = SliderTrack.AbsolutePosition.X
    local sliderWidth = SliderTrack.AbsoluteSize.X
    local percent = math.clamp((mousePos.X - sliderPos) / sliderWidth, 0, 1)
    updateSlider(0.1 + percent * 1.9)
end)

CollectDelaySliderButton.MouseButton1Down:Connect(function()
    isDraggingCollect = true
end)

CollectDelaySliderTrack.MouseButton1Down:Connect(function()
    isDraggingCollect = true
    local mousePos = UserInputService:GetMouseLocation()
    local sliderPos = CollectDelaySliderTrack.AbsolutePosition.X
    local sliderWidth = CollectDelaySliderTrack.AbsoluteSize.X
    local percent = math.clamp((mousePos.X - sliderPos) / sliderWidth, 0, 1)
    updateCollectDelaySlider(0.1 + percent * 1.9)
end)

WalkSpeedSliderButton.MouseButton1Down:Connect(function()
    isDraggingWalkSpeed = true
end)

WalkSpeedSliderTrack.MouseButton1Down:Connect(function()
    isDraggingWalkSpeed = true
    local mousePos = UserInputService:GetMouseLocation()
    local sliderPos = WalkSpeedSliderTrack.AbsolutePosition.X
    local sliderWidth = WalkSpeedSliderTrack.AbsoluteSize.X
    local percent = math.clamp((mousePos.X - sliderPos) / sliderWidth, 0, 1)
    updateWalkSpeedSlider(10 + percent * 190)
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        if isDragging then
            local mousePos = input.Position
            local sliderPos = SliderTrack.AbsolutePosition.X
            local sliderWidth = SliderTrack.AbsoluteSize.X
            local percent = math.clamp((mousePos.X - sliderPos) / sliderWidth, 0, 1)
            updateSlider(0.1 + percent * 1.9)
        elseif isDraggingCollect then
            local mousePos = input.Position
            local sliderPos = CollectDelaySliderTrack.AbsolutePosition.X
            local sliderWidth = CollectDelaySliderTrack.AbsoluteSize.X
            local percent = math.clamp((mousePos.X - sliderPos) / sliderWidth, 0, 1)
            updateCollectDelaySlider(0.1 + percent * 1.9)
        elseif isDraggingWalkSpeed then
            local mousePos = input.Position
            local sliderPos = WalkSpeedSliderTrack.AbsolutePosition.X
            local sliderWidth = WalkSpeedSliderTrack.AbsoluteSize.X
            local percent = math.clamp((mousePos.X - sliderPos) / sliderWidth, 0, 1)
            updateWalkSpeedSlider(10 + percent * 190)
        elseif isDraggingWindow then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDragging = false
        isDraggingCollect = false
        isDraggingWalkSpeed = false
        isDraggingWindow = false
    end
end)

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDraggingWindow = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    scriptActive = false
    ScreenGui:Destroy()
end)

MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local targetSize = isMinimized and UDim2.new(0, config.width, 0, 30) or UDim2.new(0, config.width, 0, config.height)
    local tween = TweenService:Create(MainFrame, tweenInfo, {Size = targetSize})
    tween:Play()
    ContentFrame.Visible = not isMinimized
    TabPanel.Visible = not isMinimized
    MinimizeButton.Text = isMinimized and "+" or "_"
end)

UserInputService.InputBegan:Connect(onInfiniteJump)

task.spawn(function()
    while scriptActive do
        if autoBubbleEnabled then
            blowBubble()
        end
        if autoSellEnabled then
            sellBubble()
        end
        if autoCollectEnabled then
            collectPlaytime()
        end
        if blackMarketEnabled then
            buyBlackMarket()
        end
        if autoWheelTicketsEnabled then
            collectWheelTickets()
        end
        if autoVoidChestEnabled then
            openVoidChest()
        end
        if autoGiantChestEnabled then
            openGiantChest()
        end
        if autoEnchantEnabled then
            autoEnchant()
        end
        task.wait(bubbleCooldown)
    end
end)

player.CharacterAdded:Connect(function(character)
    local humanoid = character:WaitForChild("Humanoid", 5)
    if humanoid then
        humanoid.WalkSpeed = walkSpeed
    end
end)

if player.Character then
    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = walkSpeed
    end
end

manageGoldenChestHighlight(goldenChestHighlightEnabled)
